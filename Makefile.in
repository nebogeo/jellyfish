TARGET  := jellyfish

SRCS    := src/main.cpp\
	      src/core/fixed.cpp\
          src/core/list.cpp\
          src/core/idmap.cpp\
          src/scheme/scheme.cpp\
          src/core/geometry.cpp\
          src/core/noise.cpp\
          src/fluxa/Sample.cpp\
          src/fluxa/Allocator.cpp\
          src/fluxa/Graph.cpp\
          src/fluxa/GraphNode.cpp\
          src/fluxa/Modules.cpp\
          src/fluxa/ModuleNodes.cpp\
          src/engine/obj_reader.cpp\
          src/engine/engine.cpp\
          src/engine/primitive.cpp\
          src/engine/text_primitive.cpp\
          src/engine/scenegraph.cpp\
          src/engine/scenenode.cpp\
          src/engine/texture.cpp\
          src/engine/nomadic.cpp\
          src/engine/jellyfish_primitive.cpp\
          src/engine/jellyfish.cpp

# for the minute, go out and up to link to the vision lib
CCFLAGS = -ggdb -Wall -O3 -fpermissive -ffast-math -Wno-unused -DFLX_LINUX -Isrc -DASSETS_PATH=@prefix@/lib/jellyfish/
LDFLAGS =
LIBS    = -lglut -lGL -lpng -lpthread -ldl -llo -ljpeg

CC = @CXX@
OBJS    := ${SRCS:.cpp=.o}
DEPS    := ${SRCS:.cpp=.dep}
XDEPS   := $(wildcard ${DEPS})
.PHONY: all clean distclean
all:: ${TARGET}

ifneq (${XDEPS},)
include ${XDEPS}
endif

${TARGET}: ${OBJS} ${COBJS}
	${CC} ${LDFLAGS} -o $@ $^ ${LIBS}

${OBJS}: %.o: %.cpp %.dep
	${CC} ${CCFLAGS} -o $@ -c $<

${DEPS}: %.dep: %.cpp Makefile
	${CC} ${CCFLAGS} -MM $< > $@

clean::
	-rm -f *~ src/*.o ${TARGET}

cleandeps:: clean
	-rm -f src/*.dep

install:: ${TARGET}
	-cp jellyfish @prefix@/bin/
	mkdir @prefix@/lib/jellyfish/
	-cp assets @prefix@/lib/jellyfish/ -r

distclean:: clean
